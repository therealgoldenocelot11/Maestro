/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|LGPL-3.0}
 */
import Third from './third.js';
import * as Phaser from 'phaser';
import { ThreeGraphicsConfig } from '@enable3d/common/dist/types.js';
import { WarpedStartFeatures } from '@enable3d/three-graphics/dist/plugins/index.js';
export declare class Scene3D extends Phaser.Scene {
    constructor(config: string | Phaser.Types.Scenes.SettingsConfig);
    /** Access the Third Dimension */
    third: Third;
    /**
     * It takes took long to setup the third dimension your self? Get started with warp speed by using this function.
     * @param features Pass the features you want to setup.
     */
    warpSpeed(...features: WarpedStartFeatures[]): Promise<import("@enable3d/three-graphics/dist/plugins/warpSpeed.js").WarpSpeedOptions>;
    haveSomeFun(numberOfElements?: number): void;
    /** Place this in the init() function */
    requestThirdDimension(): void;
    clearThirdDimension(): void;
    /** Place this in the init() function */
    accessThirdDimension(config?: ThreeGraphicsConfig): void;
    /** Combines the 3 XR update methods */
    updateLoopXR(time: number, delta: number): void;
    /** Pre-Update the WebXR */
    private preUpdateXR;
    /** Update the WebXR. Use this to update your game loop in XR mode instead the normal update method provided by phaser.
     * It will overwrite the default Phaser clock and do some other things behind the scene for you. (The Phaser update loop will not run in WebXR mode!)
     */
    updateXR(_time: number, _delta: number): void;
    /** Post-Update the WebXR */
    private postUpdateXR;
}
//# sourceMappingURL=scene3d.d.ts.map